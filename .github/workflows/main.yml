name: CI

on: [push]

jobs:
 sast_scan:
   name: Run Bandit Scan
   runs-on: ubuntu-latest

   steps:
   - name: Checkout code
     uses: actions/checkout@v2

   - name: Set up Python
     uses: actions/setup-python@v2
     with:
       python-version: 3.8

   - name: Install Bandit
     run: pip install bandit --upgrade bandit

   - name: Run Bandit Scan
     run: bandit . -f json -o bandit-report.json

   - name: Upload Artifact
     uses: actions/upload-artifact@v3
     if: always()
     with:
      name: bandit-findings
      path: bandit-report.json

   - name: SonarQube Scan
     uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    - name: Install jq
      run: sudo apt-get update && sudo apt-get install -y jq

    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      # Force to fail step after specific time.
      timeout-minutes: 5
      env:
       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
       SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}


 image_scan:
   name: Build Image and Run Image Scan
   runs-on: ubuntu-latest

   steps:
   - name: Checkout code
     uses: actions/checkout@v2

   - name: Set up Docker
     uses: docker-practice/actions-setup-docker@v1
     with:
      docker_version: '20.10.7'

   - name: Build Docker Image
     run: docker build -t linksrobot/gh_actions:latest .

   - name: Trivy Image Scan
     run: |
        trivy image --format table -o trivy-image-report.html linksrobot/gh_actions:latest

   - name: Docker Scout Scan
     uses: docker/scout-action@v1.0.9
     with:
       dockerhub-user: ${{ secrets.DOCKER_USER }}
       dockerhub-password: ${{ secrets.DOCKER_CRED }}
       command: quickview,cves
       only-severities: critical,high
       sarif-file: scout-report.sarif

   - name: Upload Artifact
     uses: actions/upload-artifact@v3
     if: always()
     with:
       name: docker-scout-findings
       path: scout-report.sarif

    - name: Push Docker Image
      run: |
          docker push linksrobot/gh_actions:latest

    - name: Kubectl Action
      uses: tale/kubectl-action@v1
      with:
        base64-kube-config: ${{ secrets.KUBE_CONFIG }}
    - run: |
        kubectl apply -f deployment-service.yaml -n webapps
        kubectl get svc -n webapps

     
